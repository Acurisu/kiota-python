# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and Test

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main, dev]
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      max-parallel: 5
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Check code format
        run: |
          yapf -dr kiota_abstractions
      - name: Check import order
        run: |
          isort kiota_abstractions
      - name: Lint with Pylint
        run: |
          pylint kiota_abstractions --disable=W --rcfile=.pylintrc
      - name: Static type checking with Mypy
        run: |
          mypy kiota_abstractions
      - name: Run the tests
        run: |
          pytest


  # The check-python-version-matrix returns success if all matrix jobs in build are successful; otherwise, it returns a failure.
  # Use this as a PR status check for GitHub Policy Service instead of individual matrix entry checks.
  check-python-version-matrix:
    runs-on: ubuntu-latest
    needs: [build]
    if: always()
    steps:
      - name: All build matrix options are successful
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: One or more build matrix options failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1